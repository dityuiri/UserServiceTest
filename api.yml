# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost:8080
tags:
  - name: User
paths:
  /user/register:
    post:
      tags:
        - User
      summary: Register user into the system based on provided information
      operationId: user-register
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegisterRequest"
            examples:
              valid:
                $ref: "#/components/examples/UserRegisterRequest"
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserRegisterCreatedResponse"
              examples:
                created:
                  $ref: "#/components/examples/UserRegisterCreatedResponse"
        '400':
          description: Bad request due to validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MultipleErrorResponse"
              examples:
                errors:
                  $ref: "#/components/examples/MultipleErrorValidationResponse"
        '422':
          description: Unprocessable due the user already created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MultipleErrorResponse"
              examples:
                errors:
                  $ref: "#/components/examples/MultipleErrorAlreadyCreatedResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MultipleErrorResponse"
              examples:
                error:
                  $ref: "#/components/examples/MultipleErrorGeneralResponse"
  /user/login:
    post:
      tags:
        - User
      summary: Sign in user to the service, returning token for accessing other APIs
      operationId: user-login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLoginRequest"
            examples:
              valid:
                $ref: "#/components/examples/UserLoginRequest"
      responses:
        '200':
          description: User successfully logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLoginResponse"
              examples:
                created:
                  $ref: "#/components/examples/UserLoginResponse"
        '400':
          description: Unsuccessful login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                errors:
                  $ref: "#/components/examples/BadRequestErrorResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                error:
                  $ref: "#/components/examples/GeneralErrorResponse"
  /user/profile:
    get:
      tags:
        - User
      summary: Get user profile based on provided token
      operationId: get-user-profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Get user profile success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserProfileResponse"
              examples:
                created:
                  $ref: "#/components/examples/GetUserProfileResponse"
        '403':
          description: Forbidden code due to unauthorized token access
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                errors:
                  $ref: "#/components/examples/ForbiddenErrorResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                error:
                  $ref: "#/components/examples/GeneralErrorResponse"
    patch:
      tags:
        - User
      summary: Update phone number or name of a user
      operationId: update-user-profile
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserProfileRequest"
            examples:
              valid:
                $ref: "#/components/examples/UpdateUserProfileRequest"
      responses:
        '200':
          description: Successfully updated the profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessageResponse"
              examples:
                error:
                  $ref: "#/components/examples/SuccessMessageResponse"
        '204':
          description: No changes happened
        '400':
          description: Wrong request body format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                errors:
                  $ref: "#/components/examples/BadRequestErrorResponse"
        '403':
          description: Forbidden code due to unauthorized token access
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                errors:
                  $ref: "#/components/examples/ForbiddenErrorResponse"
        '409':
          description: Conflict when user trying to change phone number with existing phone number
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                errors:
                  $ref: "#/components/examples/ConflictErrorResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                error:
                  $ref: "#/components/examples/GeneralErrorResponse"


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UpdateUserProfileRequest:
      type: object
      properties:
        full_name:
          type: string
        phone_number:
          type: string
    GetUserProfileResponse:
      type: object
      required:
        - name
        - phone_number
      properties:
        name:
          type: string
        phone_number:
          type: string
    UserLoginRequest:
      type: object
      required:
        - phone_number
        - password
      properties:
        phone_number:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required
        password:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required
    UserLoginResponse:
      type: object
      required:
        - id
        - token
      properties:
        id:
          type: string
        token:
          type: string
    UserRegisterRequest:
      type: object
      required:
        - phone_number
        - full_name
        - password
      properties:
        phone_number:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required,min=10,max=13,startswith=+62
        full_name:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required,min=3,max=60
        password:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required,password
    UserRegisterCreatedResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    SuccessMessageResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    MultipleErrorResponse:
      type: object
      required:
        - messages
      properties:
        messages:
          type: array
          items:
            type: string

  examples:
    UpdateUserProfileRequest:
      value:
        phone_number: "+62858778892322"
        name: "Kurumi Ruru"
    GetUserProfileResponse:
      value:
        phone_number: "+62858778892321"
        name: "Sakino Yui"
    UserRegisterRequest:
      value:
        phone_number: "+62858778892321"
        full_name: "Sakino Yui"
        password: "PuniYuiPolarBear2!"
    UserLoginRequest:
      value:
        phone_number: "+62858778892321"
        password: "PuniYuiPolarBear2!"
    UserLoginResponse:
      value:
        id: "7b8782ea-19fa-4a70-8893-c425e64a9d16"
        token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNDU2Nzg5LCJuYW1lIjoiSm9zZXBoIn0.OpOSSw7e485LOP5PrzScxHb7SR6sAOMRckfFwi4rp7o"
    UserRegisterCreatedResponse:
      value:
        id: "7b8782ea-19fa-4a70-8893-c425e64a9d16"
    MultipleErrorValidationResponse:
      value:
        messages:
          - "PhoneNumber must not exceed 13 characters."
          - "FullName must be at least 3 characters long."
          - "Password must meet password criteria. Minimum 6 characters, maximum 64 characters, containing at least 1 capital characters AND 1 number AND 1 special (non-alpha-numeric) characters."
    MultipleErrorAlreadyCreatedResponse:
      value:
        messages:
          - "user already created"
    MultipleErrorGeneralResponse:
      value:
        messages:
          - "pq error something"
    ConflictErrorResponse:
      value:
        message: "phone number exists"
    BadRequestErrorResponse:
      value:
        message: "invalid request body"
    ForbiddenErrorResponse:
      value:
        message: "invalid token"
    GeneralErrorResponse:
      value:
        message: "something error"
    SuccessMessageResponse:
      value:
        message: "changes applied successfully"
